@tailwind base;
@tailwind components;
@tailwind utilities;

/* Design System CSS Custom Properties */
:root {
  /* Primary Brand Colors */
  --color-primary-50: hsl(221, 83%, 95%);
  --color-primary-100: hsl(221, 83%, 90%);
  --color-primary-200: hsl(221, 83%, 80%);
  --color-primary-300: hsl(221, 83%, 70%);
  --color-primary-400: hsl(221, 83%, 60%);
  --color-primary-500: hsl(221, 83%, 53%);
  --color-primary-600: hsl(221, 83%, 45%);
  --color-primary-700: hsl(221, 83%, 35%);
  --color-primary-800: hsl(221, 83%, 25%);
  --color-primary-900: hsl(221, 83%, 15%);
  
  /* Feature Colors */
  --color-blue: hsl(199, 89%, 48%);
  --color-green: hsl(142, 76%, 36%);
  --color-purple: hsl(262, 83%, 58%);
  --color-orange: hsl(25, 95%, 53%);
  --color-pink: hsl(330, 81%, 60%);
  --color-yellow: hsl(45, 93%, 47%);
  --color-red: hsl(0, 84%, 60%);
  --color-emerald: hsl(160, 84%, 39%);
  --color-cyan: hsl(188, 94%, 43%);
  --color-violet: hsl(262, 83%, 58%);
  --color-amber: hsl(45, 93%, 47%);
  --color-indigo: hsl(231, 48%, 48%);
  
  /* Spacing Scale */
  --spacing-1: 0.25rem;
  --spacing-2: 0.5rem;
  --spacing-3: 0.75rem;
  --spacing-4: 1rem;
  --spacing-5: 1.25rem;
  --spacing-6: 1.5rem;
  --spacing-8: 2rem;
  --spacing-10: 2.5rem;
  --spacing-12: 3rem;
  --spacing-16: 4rem;
  --spacing-20: 5rem;
  --spacing-24: 6rem;
  
  /* Typography Scale */
  --font-size-xs: 0.75rem;
  --font-size-sm: 0.875rem;
  --font-size-base: 1rem;
  --font-size-lg: 1.125rem;
  --font-size-xl: 1.25rem;
  --font-size-2xl: 1.5rem;
  --font-size-3xl: 1.875rem;
  --font-size-4xl: 2.25rem;
  --font-size-5xl: 3rem;
  --font-size-6xl: 3.75rem;
  --font-size-7xl: 4.5rem;
  
  /* Animation Durations */
  --duration-fast: 150ms;
  --duration-normal: 300ms;
  --duration-slow: 500ms;
  --duration-slower: 800ms;
  
  /* Shadows */
  --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --shadow-base: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --shadow-xl: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
}

/* Smooth scrolling for the entire page */
html {
  scroll-behavior: smooth;
}

/* Custom scrollbar styling */
::-webkit-scrollbar {
  width: 8px;
}

::-webkit-scrollbar-track {
  background: hsl(var(--muted));
}

::-webkit-scrollbar-thumb {
  background: hsl(var(--muted-foreground) / 0.3);
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: hsl(var(--muted-foreground) / 0.5);
}

/* Hero section animations */
@keyframes float {
  0%, 100% { transform: translateY(0px); }
  50% { transform: translateY(-10px); }
}

@keyframes glow {
  0%, 100% { box-shadow: 0 0 20px hsl(var(--primary) / 0.1); }
  50% { box-shadow: 0 0 40px hsl(var(--primary) / 0.2); }
}

.animate-float {
  animation: float 3s ease-in-out infinite;
}

.animate-glow {
  animation: glow 2s ease-in-out infinite;
}

/* Gradient text animation */
@keyframes gradient-shift {
  0%, 100% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
}

.animate-gradient {
  background-size: 200% 200%;
  animation: gradient-shift 3s ease infinite;
}

/* Reduced motion preferences */
@media (prefers-reduced-motion: reduce) {
  .animate-float,
  .animate-glow,
  .animate-gradient,
  .animate-pulse,
  .animate-bounce {
    animation: none;
  }
  
  * {
    transition-duration: 0.01ms !important;
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
  }
}

/* Mobile-specific optimizations */
@media (max-width: 768px) {
  /* Improve touch targets */
  button, a, input, select, textarea {
    min-height: 44px;
  }
  
  /* Better mobile typography */
  .mobile-text-balance {
    text-wrap: balance;
  }
  
  /* Mobile-friendly spacing */
  .mobile-px {
    padding-left: 1rem;
    padding-right: 1rem;
  }
  
  /* Prevent horizontal scroll */
  body {
    overflow-x: hidden;
  }
}

/* Tablet-specific optimizations */
@media (min-width: 768px) and (max-width: 1024px) {
  /* Tablet-specific styles */
  .tablet-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 1.5rem;
  }
}

/* Desktop-specific optimizations */
@media (min-width: 1024px) {
  /* Better hover effects on desktop */
  .hover-lift:hover {
    transform: translateY(-2px);
  }
  
  .hover-scale:hover {
    transform: scale(1.02);
  }
}

/* High DPI display optimizations */
@media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi) {
  /* Crisp borders on high DPI displays */
  .crisp-border {
    border-width: 0.5px;
  }
}

/* Print styles */
@media print {
  .no-print {
    display: none !important;
  }
  
  * {
    background: white !important;
    color: black !important;
  }
}

/* Advanced Animation Classes */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideUp {
  from {
    opacity: 0;
    transform: translateY(50px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(0.9);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes slideInLeft {
  from {
    opacity: 0;
    transform: translateX(-50px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideInRight {
  from {
    opacity: 0;
    transform: translateX(50px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes bounceIn {
  0% {
    opacity: 0;
    transform: scale(0.3);
  }
  50% {
    opacity: 1;
    transform: scale(1.05);
  }
  70% {
    transform: scale(0.9);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes shimmer {
  0% {
    background-position: -200px 0;
  }
  100% {
    background-position: calc(200px + 100%) 0;
  }
}

@keyframes pulse-glow {
  0%, 100% {
    box-shadow: 0 0 20px hsl(var(--primary) / 0.1);
  }
  50% {
    box-shadow: 0 0 40px hsl(var(--primary) / 0.3);
  }
}

/* Animation utility classes */
.animate-fade-in {
  animation: fadeIn 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.animate-slide-up {
  animation: slideUp 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.animate-scale-in {
  animation: scaleIn 0.6s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.animate-slide-in-left {
  animation: slideInLeft 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.animate-slide-in-right {
  animation: slideInRight 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.animate-bounce-in {
  animation: bounceIn 1s cubic-bezier(0.68, -0.55, 0.265, 1.55) forwards;
}

.animate-shimmer {
  background: linear-gradient(90deg, transparent, rgba(255,255,255,0.4), transparent);
  background-size: 200px 100%;
  animation: shimmer 2s infinite;
}

.animate-pulse-glow {
  animation: pulse-glow 2s ease-in-out infinite;
}

/* Stagger animation delays */
.stagger-1 { animation-delay: 0.1s; }
.stagger-2 { animation-delay: 0.2s; }
.stagger-3 { animation-delay: 0.3s; }
.stagger-4 { animation-delay: 0.4s; }
.stagger-5 { animation-delay: 0.5s; }
.stagger-6 { animation-delay: 0.6s; }

/* Parallax container */
.parallax-container {
  overflow: hidden;
  position: relative;
}

.parallax-element {
  will-change: transform;
}

/* Smooth scroll behavior */
.smooth-scroll {
  scroll-behavior: smooth;
}

/* Magnetic hover effect */
.magnetic {
  transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Hover lift effect */
.hover-lift {
  transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.hover-lift:hover {
  transform: translateY(-4px);
}

/* Hover glow effect */
.hover-glow {
  transition: box-shadow 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.hover-glow:hover {
  box-shadow: 0 10px 40px hsl(var(--primary) / 0.2);
}

/* Text reveal animation */
.text-reveal {
  overflow: hidden;
  position: relative;
}

.text-reveal::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: hsl(var(--background));
  transform: translateX(-100%);
  animation: reveal 1.5s cubic-bezier(0.77, 0, 0.175, 1) forwards;
}

@keyframes reveal {
  0% {
    transform: translateX(-100%);
  }
  50% {
    transform: translateX(0%);
  }
  100% {
    transform: translateX(100%);
  }
}

/* Loading skeleton */
.skeleton {
  background: linear-gradient(90deg, hsl(var(--muted)) 25%, hsl(var(--muted-foreground) / 0.1) 50%, hsl(var(--muted)) 75%);
  background-size: 200% 100%;
  animation: shimmer 2s infinite;
}

/* Intersection observer utilities */
.fade-in-up {
  opacity: 0;
  transform: translateY(30px);
  transition: opacity 0.8s cubic-bezier(0.4, 0, 0.2, 1), transform 0.8s cubic-bezier(0.4, 0, 0.2, 1);
}

.fade-in-up.visible {
  opacity: 1;
  transform: translateY(0);
}

.fade-in-left {
  opacity: 0;
  transform: translateX(-30px);
  transition: opacity 0.8s cubic-bezier(0.4, 0, 0.2, 1), transform 0.8s cubic-bezier(0.4, 0, 0.2, 1);
}

.fade-in-left.visible {
  opacity: 1;
  transform: translateX(0);
}

.fade-in-right {
  opacity: 0;
  transform: translateX(30px);
  transition: opacity 0.8s cubic-bezier(0.4, 0, 0.2, 1), transform 0.8s cubic-bezier(0.4, 0, 0.2, 1);
}

.fade-in-right.visible {
  opacity: 1;
  transform: translateX(0);
}

/* Design System Utility Classes */

/* Consistent Hover Effects */
.hover-lift {
  transition: transform var(--duration-normal) cubic-bezier(0.4, 0, 0.2, 1);
}

.hover-lift:hover {
  transform: translateY(-4px);
}

.hover-scale {
  transition: transform var(--duration-normal) cubic-bezier(0.4, 0, 0.2, 1);
}

.hover-scale:hover {
  transform: scale(1.02);
}

.hover-glow {
  transition: box-shadow var(--duration-normal) cubic-bezier(0.4, 0, 0.2, 1);
}

.hover-glow:hover {
  box-shadow: 0 10px 40px hsl(var(--primary) / 0.2);
}

/* Interactive States */
.interactive {
  transition: all var(--duration-normal) cubic-bezier(0.4, 0, 0.2, 1);
}

.interactive:hover {
  transform: translateY(-2px);
  box-shadow: var(--shadow-lg);
}

.interactive:active {
  transform: translateY(0);
  box-shadow: var(--shadow-md);
}

/* Focus States */
.focus-ring {
  outline: 2px solid transparent;
  outline-offset: 2px;
  transition: outline-color var(--duration-fast);
}

.focus-ring:focus-visible {
  outline-color: hsl(var(--primary));
}

/* Typography Utilities */
.text-balance {
  text-wrap: balance;
}

.text-gradient {
  background: linear-gradient(135deg, hsl(var(--primary)), hsl(var(--primary) / 0.8));
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
}

/* Layout Utilities */
.container-padding {
  padding-left: var(--spacing-4);
  padding-right: var(--spacing-4);
}

@media (min-width: 640px) {
  .container-padding {
    padding-left: var(--spacing-6);
    padding-right: var(--spacing-6);
  }
}

@media (min-width: 1024px) {
  .container-padding {
    padding-left: var(--spacing-8);
    padding-right: var(--spacing-8);
  }
}

.section-spacing {
  padding-top: var(--spacing-20);
  padding-bottom: var(--spacing-20);
}

@media (min-width: 768px) {
  .section-spacing {
    padding-top: var(--spacing-24);
    padding-bottom: var(--spacing-24);
  }
}

/* Card Variants */
.card-default {
  background-color: hsl(var(--card));
  border: 1px solid hsl(var(--border));
  border-radius: 1rem;
  box-shadow: var(--shadow-sm);
  padding: var(--spacing-6);
  transition: all var(--duration-normal) cubic-bezier(0.4, 0, 0.2, 1);
}

.card-default:hover {
  border-color: hsl(var(--primary) / 0.5);
  box-shadow: var(--shadow-md);
  transform: translateY(-2px);
}

.card-elevated {
  background-color: hsl(var(--card));
  border-radius: 1rem;
  box-shadow: var(--shadow-lg);
  padding: var(--spacing-8);
  transition: all var(--duration-normal) cubic-bezier(0.4, 0, 0.2, 1);
}

.card-elevated:hover {
  box-shadow: var(--shadow-xl);
  transform: translateY(-4px);
}

/* Button Variants */
.btn-primary {
  background-color: hsl(var(--primary));
  color: hsl(var(--primary-foreground));
  border: none;
  border-radius: 0.5rem;
  padding: var(--spacing-3) var(--spacing-6);
  font-weight: 600;
  font-size: var(--font-size-base);
  box-shadow: var(--shadow-sm);
  transition: all var(--duration-normal) cubic-bezier(0.4, 0, 0.2, 1);
}

.btn-primary:hover {
  background-color: hsl(var(--primary) / 0.9);
  box-shadow: var(--shadow-md);
  transform: translateY(-1px);
}

.btn-secondary {
  background-color: transparent;
  color: hsl(var(--primary));
  border: 2px solid hsl(var(--primary));
  border-radius: 0.5rem;
  padding: var(--spacing-3) var(--spacing-6);
  font-weight: 600;
  font-size: var(--font-size-base);
  transition: all var(--duration-normal) cubic-bezier(0.4, 0, 0.2, 1);
}

.btn-secondary:hover {
  background-color: hsl(var(--primary) / 0.05);
  transform: translateY(-1px);
}

/* Icon Utilities */
.icon-feature {
  width: 1.5rem;
  height: 1.5rem;
  flex-shrink: 0;
}

.icon-feature-lg {
  width: 2rem;
  height: 2rem;
  flex-shrink: 0;
}

/* Feature Color Classes */
.text-feature-blue { color: var(--color-blue); }
.text-feature-green { color: var(--color-green); }
.text-feature-purple { color: var(--color-purple); }
.text-feature-orange { color: var(--color-orange); }
.text-feature-pink { color: var(--color-pink); }
.text-feature-yellow { color: var(--color-yellow); }
.text-feature-red { color: var(--color-red); }
.text-feature-emerald { color: var(--color-emerald); }
.text-feature-cyan { color: var(--color-cyan); }
.text-feature-violet { color: var(--color-violet); }
.text-feature-amber { color: var(--color-amber); }
.text-feature-indigo { color: var(--color-indigo); }

.bg-feature-blue { background-color: hsl(from var(--color-blue) h s l / 0.1); }
.bg-feature-green { background-color: hsl(from var(--color-green) h s l / 0.1); }
.bg-feature-purple { background-color: hsl(from var(--color-purple) h s l / 0.1); }
.bg-feature-orange { background-color: hsl(from var(--color-orange) h s l / 0.1); }
.bg-feature-pink { background-color: hsl(from var(--color-pink) h s l / 0.1); }
.bg-feature-yellow { background-color: hsl(from var(--color-yellow) h s l / 0.1); }
.bg-feature-red { background-color: hsl(from var(--color-red) h s l / 0.1); }
.bg-feature-emerald { background-color: hsl(from var(--color-emerald) h s l / 0.1); }
.bg-feature-cyan { background-color: hsl(from var(--color-cyan) h s l / 0.1); }
.bg-feature-violet { background-color: hsl(from var(--color-violet) h s l / 0.1); }
.bg-feature-amber { background-color: hsl(from var(--color-amber) h s l / 0.1); }
.bg-feature-indigo { background-color: hsl(from var(--color-indigo) h s l / 0.1); }

/* LIGHT MODE */
:root {
  --button-outline: rgba(0,0,0, .10);
  --badge-outline: rgba(0,0,0, .05);

  /* Automatic computation of border around primary / danger buttons */
  --opaque-button-border-intensity: -8; /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(0,0,0, .03);
  --elevate-2: rgba(0,0,0, .08);

  --background: 0 0% 98%;

  --foreground: 220 9% 10%;

  --border: 220 13% 88%;

  --card: 0 0% 100%;

  --card-foreground: 220 9% 10%;

  --card-border: 220 13% 91%;

  --sidebar: 220 13% 96%;

  --sidebar-foreground: 220 9% 10%;

  --sidebar-border: 220 13% 91%;

  --sidebar-primary: 220 91% 60%;

  --sidebar-primary-foreground: 0 0% 98%;

  --sidebar-accent: 220 13% 91%;

  --sidebar-accent-foreground: 220 9% 10%;

  --sidebar-ring: 220 91% 60%;

  --popover: 0 0% 100%;

  --popover-foreground: 220 9% 10%;

  --popover-border: 220 13% 88%;

  --primary: 220 91% 60%;

  --primary-foreground: 0 0% 98%;

  --secondary: 220 13% 93%;

  --secondary-foreground: 220 9% 10%;

  --muted: 220 13% 94%;

  --muted-foreground: 220 9% 46%;

  --accent: 220 13% 92%;

  --accent-foreground: 220 9% 10%;

  --destructive: 0 84% 60%;

  --destructive-foreground: 0 0% 98%;

  --input: 220 13% 85%;
  --ring: 220 91% 60%;
  --chart-1: 220 91% 45%;
  --chart-2: 142 76% 36%;
  --chart-3: 38 92% 50%;
  --chart-4: 270 95% 75%;
  --chart-5: 12 76% 61%;

  --font-sans: Open Sans, sans-serif;
  --font-serif: Georgia, serif;
  --font-mono: Menlo, monospace;
  --radius: .5rem; /* 8px */
  --shadow-2xs: 0px 2px 0px 0px hsl(220 13% 91% / 0.00);
  --shadow-xs: 0px 2px 0px 0px hsl(220 13% 91% / 0.00);
  --shadow-sm: 0px 2px 0px 0px hsl(220 13% 91% / 0.00), 0px 1px 2px -1px hsl(220 13% 91% / 0.00);
  --shadow: 0px 2px 0px 0px hsl(220 13% 91% / 0.00), 0px 1px 2px -1px hsl(220 13% 91% / 0.00);
  --shadow-md: 0px 2px 0px 0px hsl(220 13% 91% / 0.00), 0px 2px 4px -1px hsl(220 13% 91% / 0.00);
  --shadow-lg: 0px 2px 0px 0px hsl(220 13% 91% / 0.00), 0px 4px 6px -1px hsl(220 13% 91% / 0.00);
  --shadow-xl: 0px 2px 0px 0px hsl(220 13% 91% / 0.00), 0px 8px 10px -1px hsl(220 13% 91% / 0.00);
  --shadow-2xl: 0px 2px 0px 0px hsl(220 13% 91% / 0.00);
  --tracking-normal: 0em;
  --spacing: 0.25rem;

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

.dark {
  --button-outline: rgba(255,255,255, .10);
  --badge-outline: rgba(255,255,255, .05);

  --opaque-button-border-intensity: 9;  /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(255,255,255, .04);
  --elevate-2: rgba(255,255,255, .09);

  --background: 220 13% 9%;

  --foreground: 0 0% 98%;

  --border: 220 13% 15%;

  --card: 220 13% 11%;

  --card-foreground: 0 0% 98%;

  --card-border: 220 13% 15%;

  --sidebar: 220 13% 8%;

  --sidebar-foreground: 0 0% 98%;

  --sidebar-border: 220 13% 12%;

  --sidebar-primary: 220 91% 60%;

  --sidebar-primary-foreground: 220 13% 9%;

  --sidebar-accent: 220 13% 13%;

  --sidebar-accent-foreground: 220 9% 70%;

  --sidebar-ring: 220 91% 60%;

  --popover: 220 13% 11%;

  --popover-foreground: 0 0% 98%;

  --popover-border: 220 13% 15%;

  --primary: 220 91% 60%;

  --primary-foreground: 220 13% 9%;

  --secondary: 220 13% 13%;

  --secondary-foreground: 220 9% 70%;

  --muted: 220 13% 12%;

  --muted-foreground: 220 9% 70%;

  --accent: 220 13% 13%;

  --accent-foreground: 220 9% 70%;

  --destructive: 0 84% 60%;

  --destructive-foreground: 0 0% 98%;

  --input: 220 13% 18%;
  --ring: 220 91% 60%;
  --chart-1: 220 91% 75%;
  --chart-2: 142 76% 60%;
  --chart-3: 38 92% 70%;
  --chart-4: 270 95% 85%;
  --chart-5: 12 76% 75%;

  --shadow-2xs: 0px 2px 0px 0px hsl(220 13% 5% / 0.00);
  --shadow-xs: 0px 2px 0px 0px hsl(220 13% 5% / 0.00);
  --shadow-sm: 0px 2px 0px 0px hsl(220 13% 5% / 0.00), 0px 1px 2px -1px hsl(220 13% 5% / 0.00);
  --shadow: 0px 2px 0px 0px hsl(220 13% 5% / 0.00), 0px 1px 2px -1px hsl(220 13% 5% / 0.00);
  --shadow-md: 0px 2px 0px 0px hsl(220 13% 5% / 0.00), 0px 2px 4px -1px hsl(220 13% 5% / 0.00);
  --shadow-lg: 0px 2px 0px 0px hsl(220 13% 5% / 0.00), 0px 4px 6px -1px hsl(220 13% 5% / 0.00);
  --shadow-xl: 0px 2px 0px 0px hsl(220 13% 5% / 0.00), 0px 8px 10px -1px hsl(220 13% 5% / 0.00);
  --shadow-2xl: 0px 2px 0px 0px hsl(220 13% 5% / 0.00);

}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased bg-background text-foreground;
  }
}

/**
 * Using the elevate system.
 * Automatic contrast adjustment.
 *
 * <element className="hover-elevate" />
 * <element className="active-elevate-2" />
 *
 * // Using the tailwind utility when a data attribute is "on"
 * <element className="toggle-elevate data-[state=on]:toggle-elevated" />
 * // Or manually controlling the toggle state
 * <element className="toggle-elevate toggle-elevated" />
 *
 * Elevation systems have to handle many states.
 * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)
 * - toggled or not
 * - focused or not (this is not handled with these utilities)
 *
 * Even without handling focused or not, this is six possible combinations that
 * need to be distinguished from eachother visually.
 */
@layer utilities {

  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    @apply hidden;
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
   * buttons/badges can remove the automatic brightness adjustment on interactions
   * and program their own. */
  .no-default-hover-elevate {}

  .no-default-active-elevate {}


  /**
   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
   * This way they can stack/compound. Both will overlap the parent's borders!
   * So borders will be automatically adjusted both on toggle, and hover/active,
   * and they will be compounded.
   */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: -1;
    /* sits behind content but above backdrop */
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: 999;
    /* sits in front of content */
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }
}